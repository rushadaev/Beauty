import {Markup} from "telegraf";
import {MyContext} from "../../../types/MyContext";

const defaultButtons = [
    //–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞—è–≤–∫–∏
    [Markup.button.callback('–ó–∞—è–≤–∫–∏', 'viewApplications')],
    //–¢—Ä—É–¥–æ—É—Å—Ç—Ä–æ–∏—Ç—å
    [Markup.button.callback('–¢—Ä—É–¥–æ—É—Å—Ç—Ä–æ–∏—Ç—å', 'employment')],

    [Markup.button.callback('üëå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'mainmenu')],
];

const defaultButtonsMenuOnly = [
    [Markup.button.callback('üëå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'mainmenu')],
];

export const enterHandler = async (ctx: MyContext) => {
    const messageText = `[—Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ]`;

    const buttonsArray = Markup.inlineKeyboard([...defaultButtons]);

    if (ctx.callbackQuery && ctx.callbackQuery.message) {
        try {
            // If the interaction is from a callback query, edit the existing message
            await ctx.editMessageText(messageText, buttonsArray);
        }
        catch (error) {
            await ctx.reply(messageText, buttonsArray);
        }
    } else {
        await ctx.reply(messageText, buttonsArray);
    }
}

export const showApplications = async (ctx: MyContext) => {
    const messageText = `–¢—É—Ç –≤—ã–≤–æ–¥–∏–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏ –Ω–∞ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ`;

    const buttonsArray = Markup.inlineKeyboard([...defaultButtonsMenuOnly]);

    if (ctx.callbackQuery && ctx.callbackQuery.message) {
        try {
            // If the interaction is from a callback query, edit the existing message
            await ctx.editMessageText(messageText, buttonsArray);
        }
        catch (error) {
            await ctx.reply(messageText, buttonsArray);
        }
    } else {
        await ctx.reply(messageText, buttonsArray);
    }
}

export const showEmployment = async (ctx: MyContext) => {
    const messageText = `–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ @Beauty_bot_master_bot –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ`;

    //@Beauty_bot_master_bot

    const go_to_bot = Markup.button.url('–ü–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç–∞', 'https://t.me/Beauty_bot_master_bot?start=registration');

    const buttonsArray = Markup.inlineKeyboard([[go_to_bot], ...defaultButtonsMenuOnly]);

    if (ctx.callbackQuery && ctx.callbackQuery.message) {
        try {
            // If the interaction is from a callback query, edit the existing message
            await ctx.editMessageText(messageText, buttonsArray);
        }
        catch (error) {
            await ctx.reply(messageText, buttonsArray);
        }
    } else {
        await ctx.reply(messageText, buttonsArray);
    }
}