import { Scenes, Markup } from 'telegraf';
import { MyContext, CancelBookingState } from '../../../types/MyContext';
import laravelService from '../../../../services/laravelService';

export const cancelBookingScene = new Scenes.BaseScene<MyContext>('cancel_booking_scene');

cancelBookingScene.enter(async (ctx: MyContext) => {
    const state = ctx.scene.state as CancelBookingState;

    try {
        if (!state?.recordId) {
            return ctx.reply(
                '‚ùå –û—à–∏–±–∫–∞: –Ω–µ –≤—ã–±—Ä–∞–Ω–∞ –∑–∞–ø–∏—Å—å –¥–ª—è –æ—Ç–º–µ–Ω—ã',
                Markup.inlineKeyboard([[
                    Markup.button.callback('¬´ –ù–∞–∑–∞–¥ –∫ –∑–∞–ø–∏—Å—è–º', 'back_to_records')
                ]])
            );
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Å–µ—Å—Å–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö
        ctx.session.cancelBookingState = {
            recordId: state.recordId,
            phone: state.phone || ctx.session.phone,
            password: state.password || ctx.session.password
        };

        await ctx.reply(
            '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —ç—Ç—É –∑–∞–ø–∏—Å—å?\n\n' +
            '‚ö†Ô∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!',
            Markup.inlineKeyboard([
                [
                    Markup.button.callback('–î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å', 'confirm_cancel'),
                    Markup.button.callback('–ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è', 'back_to_record')
                ]
            ])
        );

    } catch (error) {
        console.error('Error in cancelBookingScene enter:', error);
        await ctx.reply(
            '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
            Markup.inlineKeyboard([[
                Markup.button.callback('¬´ –ù–∞–∑–∞–¥', 'back_to_records')
            ]])
        );
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–º–µ–Ω—ã
cancelBookingScene.action('confirm_cancel', async (ctx) => {
    const state = ctx.session.cancelBookingState;
    
    try {
        if (!state?.recordId || !state.phone || !state.password) {
            throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–ø–∏—Å–∏');
        }

        await ctx.answerCbQuery();
        const loadingMsg = await ctx.reply('üîÑ –û—Ç–º–µ–Ω—è–µ–º –∑–∞–ø–∏—Å—å...');

        try {
            const result = await laravelService.cancelMasterRecord({
                phone: state.phone,
                password: state.password,
                recordId: state.recordId
            });

            await ctx.telegram.deleteMessage(ctx.chat!.id, loadingMsg.message_id).catch(() => {});

            await ctx.reply(
                '‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞',
                Markup.inlineKeyboard([[
                    Markup.button.callback('¬´ –ö —Å–ø–∏—Å–∫—É –∑–∞–ø–∏—Å–µ–π', 'back_to_records')
                ]])
            );

        } catch (error: any) {
            await ctx.telegram.deleteMessage(ctx.chat!.id, loadingMsg.message_id).catch(() => {});

            await ctx.reply(
                '‚ùå ' + (error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å'),
                Markup.inlineKeyboard([[
                    Markup.button.callback('¬´ –ù–∞–∑–∞–¥', 'back_to_record')
                ]])
            );
        }

    } catch (error) {
        console.error('Error in confirm_cancel handler:', error);
        await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
});

// –í–æ–∑–≤—Ä–∞—Ç –∫ –¥–µ—Ç–∞–ª—è–º –∑–∞–ø–∏—Å–∏
cancelBookingScene.action('back_to_record', async (ctx) => {
    await ctx.answerCbQuery();
    return ctx.scene.enter('clients_management_scene', {
        action: 'show_record',
        recordId: ctx.session.cancelBookingState?.recordId
    });
});

// –í–æ–∑–≤—Ä–∞—Ç –∫ —Å–ø–∏—Å–∫—É –∑–∞–ø–∏—Å–µ–π
cancelBookingScene.action('back_to_records', async (ctx) => {
    await ctx.answerCbQuery();
    // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    delete ctx.session.cancelBookingState;
    return ctx.scene.enter('clients_management_scene');
});

export default cancelBookingScene;