import { Scenes, Markup } from 'telegraf';
import { MyContext } from '../../../types/MyContext';
import axios from 'axios';
import fs from 'fs';
import path from 'path';
import LaravelService from '../../../../services/laravelService';

export const salaryScene = new Scenes.BaseScene<MyContext>('salary');

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
salaryScene.action('export_salary', async (ctx) => {
    try {
        await ctx.answerCbQuery('–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç...');
        
        // –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
        const excelBuffer = await LaravelService.exportSalaryReport();

        // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        const tempDir = path.join(__dirname, '../../../temp');
        if (!fs.existsSync(tempDir)) {
            fs.mkdirSync(tempDir, { recursive: true });
        }
        
        const tempFilePath = path.join(tempDir, `salary_${Date.now()}.xlsx`);
        fs.writeFileSync(tempFilePath, excelBuffer);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
        await ctx.replyWithDocument({
            source: tempFilePath,
            filename: `salary_report.xlsx`
        });

        // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        fs.unlinkSync(tempFilePath);

    } catch (error) {
        console.error('Error exporting salary:', error);
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
});

salaryScene.action('mainmenu', async (ctx) => {
    await ctx.answerCbQuery();
    await ctx.scene.enter('admin_main');
});

// –í—Ö–æ–¥–Ω–∞—è —Ç–æ—á–∫–∞ —Å—Ü–µ–Ω—ã
salaryScene.enter(async (ctx: MyContext) => {
    const keyboard = Markup.inlineKeyboard([
        [Markup.button.callback('üì• –°–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç –ø–æ –∑–∞—Ä–ø–ª–∞—Ç–µ', 'export_salary')],
        [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'mainmenu')]
    ]);

    await ctx.reply('üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—Ä–ø–ª–∞—Ç–∞–º–∏', keyboard);
});