import { Scenes, Markup } from 'telegraf';
import { MyContext } from '../../../types/MyContext';
import LaravelService from "../../../../services/laravelService";
import ExcelJS from 'exceljs';
import { Readable } from 'stream';
import logger from '../../../../utils/logger/loggerTelegram';

export const changeServicesScene = new Scenes.BaseScene<MyContext>('change_services');

interface PriceChangeDisplay {
    branch_name: string;
    service_name: string;
    old_price: number;
    new_price: number;
    branch_id: number;  // –î–æ–±–∞–≤–ª—è–µ–º ID –¥–ª—è API
    service_id: number; // –î–æ–±–∞–≤–ª—è–µ–º ID –¥–ª—è API
}

interface PriceChangeUpdate {
    branch_id: number;
    service_id: number;
    new_price: number;
}

// –í—Ö–æ–¥–Ω–∞—è —Ç–æ—á–∫–∞ —Å—Ü–µ–Ω—ã
changeServicesScene.enter(async (ctx: MyContext) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const phone = ctx.session?.phone;
    const password = ctx.session?.password;

    if (!phone || !password) {
        await ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è.',
            Markup.inlineKeyboard([[
                Markup.button.callback('üëà –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'mainmenu')
            ]])
        );
        return;
    }

    const keyboard = Markup.inlineKeyboard([
        [Markup.button.callback('üì• –ü–æ–ª—É—á–∏—Ç—å —à–∞–±–ª–æ–Ω Excel', 'get_template')],
        [Markup.button.callback('üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π Excel', 'upload_template')],
        [Markup.button.callback('üëà –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'mainmenu')]
    ]);

    await ctx.reply(
        'üè∑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∞–º–∏\n\n' +
        '1. –ù–∞–∂–º–∏—Ç–µ ¬´–ü–æ–ª—É—á–∏—Ç—å —à–∞–±–ª–æ–Ω Excel¬ª ‚Äî –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É —Å–æ —Å–ø–∏—Å–∫–æ–º —Ñ–∏–ª–∏–∞–ª–æ–≤ –∏ —É—Å–ª—É–≥.\n' +
        '2. –û—Ç–∫—Ä–æ–π—Ç–µ —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª, –Ω–∞–π–¥–∏—Ç–µ –Ω—É–∂–Ω—É—é —É—Å–ª—É–≥—É(–∏) –∏ –≤ –∫–æ–ª–æ–Ω–∫–µ ¬´–ù–æ–≤–∞—è —Ü–µ–Ω–∞¬ª —É–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.\n' +
        '3. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª.\n' +
        '4. –ù–∞–∂–º–∏—Ç–µ ¬´–ó–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π Excel¬ª, –∞ –∑–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞ –≤ —á–∞—Ç.\n' +
        '\n–ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –±–æ—Ç –ø–æ–∫–∞–∂–µ—Ç, –∫–∞–∫–∏–µ —É—Å–ª—É–≥–∏ –±—É–¥—É—Ç –∏–∑–º–µ–Ω–µ–Ω—ã, –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è.',
        keyboard
    );
});

changeServicesScene.action('upload_template', async (ctx) => {
    await ctx.answerCbQuery(); // –∑–∞–∫—Ä—ã—Ç—å ¬´—á–∞—Å–∏–∫–∏¬ª –Ω–∞ –∫–Ω–æ–ø–∫–µ
    await ctx.reply(
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª Excel (XLSX) –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n' +
        '–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ .xlsx.'
    );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
changeServicesScene.action('get_template', async (ctx) => {
    try {
        // 1. –°—Ä–∞–∑—É –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å ¬´—á–∞—Å–∏–∫–∏¬ª —É –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
        await ctx.answerCbQuery();

        // 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ¬´–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ¬ª
        const waitingMessage = await ctx.reply('‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∏–¥—ë—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è Excel...');

        // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        const phone = ctx.session?.phone;
        const password = ctx.session?.password;

        if (!phone || !password) {
            // –ï—Å–ª–∏ –Ω–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ ‚Äì —É–¥–∞–ª—è–µ–º ¬´–∂–¥—ë–º-—Å–æ–æ–±—â–µ–Ω–∏–µ¬ª –∏ –≤—ã—Ö–æ–¥–∏–º
            await ctx.deleteMessage(waitingMessage.message_id);
            await ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.');
            return;
        }

        // 4. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
        const template = await LaravelService.generateServicesTemplate({ phone, password });

        // 5. –£–¥–∞–ª—è–µ–º ¬´–∂–¥—ë–º-—Å–æ–æ–±—â–µ–Ω–∏–µ¬ª
        await ctx.deleteMessage(waitingMessage.message_id);

        // 6. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
        await ctx.replyWithDocument({
            source: template,
            filename: 'services_template.xlsx'
        });

        // 7. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await ctx.reply(
            'üìù –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–ª–æ–Ω–∫—É "–ù–æ–≤–∞—è —Ü–µ–Ω–∞" –¥–ª—è —Ç–µ—Ö —É—Å–ª—É–≥, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å.\n' +
            '–ü–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –æ–±—Ä–∞—Ç–Ω–æ –≤ –±–æ—Ç.',
            Markup.inlineKeyboard([[Markup.button.callback('üëà –ù–∞–∑–∞–¥', 'back_to_menu')]])
        );

    } catch (error) {
        logger.error('Error generating template:', error);

        // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ ‚Äî –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–∏—Ç—å ¬´–∂–¥—ë–º-—Å–æ–æ–±—â–µ–Ω–∏–µ¬ª (–µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
        // –ù–æ –Ω—É–∂–Ω–æ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –º—ã –µ–≥–æ –Ω–µ —É–¥–∞–ª—è–ª–∏ —Ä–∞–Ω—å—à–µ
        // –ó–¥–µ—Å—å –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –º–æ–∂–µ–º –æ–±–µ—Ä–Ω—É—Ç—å –≤ try/catch
        try {
            // –ï—Å–ª–∏ –Ω–µ —É—Å–ø–µ–ª–∏ —Å–æ–∑–¥–∞—Ç—å waitingMessage, —ç—Ç–æ—Ç –≤—ã–∑–æ–≤ –º–æ–∂–µ—Ç —É–ø–∞—Å—Ç—å
            // –Ω–æ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ
            await ctx.deleteMessage();
        } catch (e) {
            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É —É–¥–∞–ª–µ–Ω–∏—è
        }

        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —à–∞–±–ª–æ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
});



// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
changeServicesScene.on('document', async (ctx) => {
    try {
        const phone = ctx.session?.phone;
        const password = ctx.session?.password;

        if (!phone || !password) {
            await ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.');
            return;
        }

        if (!ctx.message.document.mime_type?.includes('spreadsheet')) {
            await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª Excel (.xlsx)');
            return;
        }

        const file = await ctx.telegram.getFile(ctx.message.document.file_id);
        const filePath = file.file_path;
        
        if (!filePath) {
            await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª');
            return;
        }

        const fileUrl = `https://api.telegram.org/file/bot${process.env.TELEGRAM_BOT_TOKEN_SUPPLIES_NEW}/${filePath}`;
        const response = await fetch(fileUrl);
        const buffer = await response.arrayBuffer();

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ API
        // –í –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞:
const result = await LaravelService.processServicesUpdates({
    phone,
    password,
    file: Buffer.from(buffer)
});

if (!result.success) {
    await ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: ' + result.message);
    return;
}

// –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
let message = 'üìã –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:\n\n';

if (result.data.changes) {
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ —Ñ–∏–ª–∏–∞–ª–∞–º —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–∏–ø–æ–≤
    const groupedChanges = result.data.changes.reduce((acc, change: PriceChangeDisplay) => {
        if (!acc[change.branch_name]) {
            acc[change.branch_name] = [];
        }
        acc[change.branch_name].push(change);
        return acc;
    }, {} as Record<string, PriceChangeDisplay[]>);

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ
    Object.keys(groupedChanges).forEach(branch => {
        message += `üè¢ ${branch}:\n`;
        groupedChanges[branch].forEach(change => {
            message += `- ${change.service_name}: ${change.old_price}‚ÇΩ ‚Üí ${change.new_price}‚ÇΩ\n`;
        });
        message += '\n';
    });
}

        if (result.data.errors.length > 0) {
            message += '\n‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:\n';
            for (const error of result.data.errors) {
                message += `- –°—Ç—Ä–æ–∫–∞ ${error.row}: ${error.message}\n`;
            }
        }

        ctx.session.pendingChanges = result.data.changes;

        await ctx.reply(message, Markup.inlineKeyboard([
            [Markup.button.callback('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'confirm_changes')],
            [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', 'cancel_changes')]
        ]));

    } catch (error) {
        logger.error('Error processing uploaded file:', error);
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    }
});

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
changeServicesScene.action('confirm_changes', async (ctx) => {
    try {
        await ctx.answerCbQuery('–ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è...');

        const phone = ctx.session?.phone;
        const password = ctx.session?.password;
        const changes = ctx.session.pendingChanges;

        if (!phone || !password) {
            await ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.');
            return;
        }

        if (!changes || changes.length === 0) {
            await ctx.editMessageText('–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è');
            return;
        }

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ API
        const updates = changes.map(change => ({
            branch_id: change.branch_id,
            service_id: change.service_id,
            new_price: change.new_price
        }));
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ API
        const results = await LaravelService.updateServicePrices({
            phone,
            password,
            updates
        });

        // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        let message = 'üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:\n\n';
        message += `‚úÖ –£—Å–ø–µ—à–Ω–æ: ${results.data.success}\n`;
        
        if (results.data.failed > 0) {
            message += `‚ùå –û—à–∏–±–æ–∫: ${results.data.failed}\n\n`;
            message += '–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫:\n';
            results.data.errors.forEach((error: any) => {
                message += `- ${error.branch_name}, ${error.service_name}: ${error.error}\n`;
            });
        }

        await ctx.editMessageText(message, Markup.inlineKeyboard([
            [Markup.button.callback('üëà –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', 'back_to_menu')]
        ]));

    } catch (error) {
        logger.error('Error applying changes:', error);
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
});

// –ù–∞–≤–∏–≥–∞—Ü–∏—è
changeServicesScene.action('back_to_menu', async (ctx) => {
    await ctx.scene.reenter();
});

changeServicesScene.action('mainmenu', async (ctx) => {
    await ctx.scene.enter('admin_main');
});

changeServicesScene.action('cancel_changes', async (ctx) => {
    try {
        await ctx.answerCbQuery();
        ctx.session.pendingChanges = undefined;
        await ctx.editMessageText(
            '‚ùå –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã',
            Markup.inlineKeyboard([[
                Markup.button.callback('üëà –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', 'back_to_menu')
            ]])
        );
    } catch (error) {
        logger.error('Error cancelling changes:', error);
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
});

export default changeServicesScene;