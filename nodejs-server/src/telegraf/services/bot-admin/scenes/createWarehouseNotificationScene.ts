import { Scenes, Markup } from 'telegraf';
import { MyContext } from '../../../types/MyContext';
import { code, fmt } from "telegraf/format";
import logger from "../../../../utils/logger/loggerTelegram";
import LaravelService from "../../../../services/laravelService";

// –ö–Ω–æ–ø–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
const defaultButtons = [
   [Markup.button.callback('üëà –ù–∞–∑–∞–¥', 'back_to_products')],
   [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'mainmenu')]
];

const defaultButtonsMenuOnly = [
   [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'mainmenu')]
];

// –°–æ–∑–¥–∞–µ–º WizardScene
export const createWarehouseNotificationScene = new Scenes.WizardScene<MyContext>(
    'create_warehouse_notification_scene',
    // –®–∞–≥ 1
    async (ctx) => {
        logger.info('–ü–µ—Ä–≤—ã–π —à–∞–≥ —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', {
            selectedProductId: ctx.session.selectedProductId,
            scene: ctx.scene.current?.id
        });

        try {
            if (!ctx.session?.selectedProductId) {
                throw new Error('–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω');
            }

            const keyboard = Markup.inlineKeyboard([
                [Markup.button.callback('–û—Ç–º–µ–Ω–∞', 'back_to_products')],
                [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'mainmenu')]
            ]);

            await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞, –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:', keyboard);
            
            return ctx.wizard.next();
        } catch (error) {
            logger.error('–û—à–∏–±–∫–∞ –≤ –ø–µ—Ä–≤–æ–º —à–∞–≥–µ:', error);
            await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É –ø—Ä–æ–¥—É–∫—Ç–∞.');
            return ctx.scene.enter('products_scene');
        }
    },
   // –®–∞–≥ 2: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
   // –®–∞–≥ 2: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
async (ctx) => {
    logger.info('–í—Ö–æ–¥ –≤–æ –≤—Ç–æ—Ä–æ–π —à–∞–≥', {
        message: ctx.message,
        session: ctx.scene.session,
        wizard_state: ctx.wizard?.state
    });

    if (!ctx.message || !('text' in ctx.message)) {
        await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.');
        return;
    }

    const amount = parseInt(ctx.message.text, 10);
    if (isNaN(amount) || amount < 0) {
        await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.');
        return;
    }

    try {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if (!ctx.session.warehouseForm) {
            ctx.session.warehouseForm = {
                productId: ctx.session.selectedProductId,
                minAmount: null,
                type: 'warehouse'
            };
        }

        // –¢–µ–ø–µ—Ä—å –±–µ–∑–æ–ø–∞—Å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
        ctx.session.warehouseForm.minAmount = amount;

        const keyboard = Markup.inlineKeyboard([
            [Markup.button.callback('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'confirm_warehouse_notification')],
            [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'back_to_products')],
            [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'mainmenu')]
        ]);

        const message = fmt`–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:

${code('–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ')}: ${amount}

–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.`;

        await ctx.reply(message, keyboard);

        logger.info('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', {
            amount,
            form: ctx.session.warehouseForm
        });

    } catch (error) {
        logger.error('–û—à–∏–±–∫–∞ –≤–æ –≤—Ç–æ—Ä–æ–º —à–∞–≥–µ:', error);
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        return ctx.scene.enter('products_scene');
    }
}
);

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
createWarehouseNotificationScene.action('confirm_warehouse_notification', async (ctx) => {
    try {
        // –ë–µ—Ä–µ–º form –∏–∑ ctx.session –≤–º–µ—Å—Ç–æ ctx.scene.session
        const form = ctx.session.warehouseForm;
        
        logger.info('–ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', {
            form,
            user_id: ctx.from?.id
        });
        
        if (!form || !form.productId || !form.minAmount) {
            throw new Error('–ù–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã');
        }

        const result = await LaravelService.createWarehouseNotification(
            ctx.from.id,
            {
                productId: form.productId,
                minAmount: form.minAmount,
                type: 'warehouse',
                branchId: ctx.session.selectedBranchId // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑ —Å–µ—Å—Å–∏–∏
            }
        );

        if (!result) {
            throw new Error('Failed to create notification');
        }

        const keyboard = Markup.inlineKeyboard([
            [Markup.button.callback('üìù –°–æ–∑–¥–∞—Ç—å –µ—â–µ', 'back_to_products')],
            [Markup.button.callback('üìã –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 'warehouse_list')],
            [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'mainmenu')]
        ]);

        const message = fmt`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ

–ö–æ–≥–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –¥–æ—Å—Ç–∏–≥–Ω–µ—Ç ${code(form.minAmount.toString())} –µ–¥–∏–Ω–∏—Ü, 
–≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.`;

        await ctx.reply(message, keyboard);
        await ctx.answerCbQuery('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ');

        logger.info('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ', {
            form,
            user_id: ctx.from?.id
        });

    } catch (error) {
        logger.error('Error creating notification:', error);
        await ctx.reply(
            '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
            Markup.inlineKeyboard([
                [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'mainmenu')]
            ])
        );
    }
});

createWarehouseNotificationScene.action('back_to_products', async (ctx) => {
    logger.info('–í–æ–∑–≤—Ä–∞—Ç –∫ —Å–ø–∏—Å–∫—É –ø—Ä–æ–¥—É–∫—Ç–æ–≤');
    await ctx.answerCbQuery();
    return ctx.scene.enter('products_scene');
});

createWarehouseNotificationScene.action('warehouse_list', async (ctx) => {
    logger.info('–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ø–∏—Å–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
    await ctx.answerCbQuery();
    return ctx.scene.enter('warehouse_notifications_list');
});

createWarehouseNotificationScene.action('mainmenu', async (ctx) => {
   logger.info('–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é');
   await ctx.answerCbQuery();
   return ctx.scene.enter('admin_main');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤
// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤




// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤–Ω–µ —à–∞–≥–æ–≤
createWarehouseNotificationScene.on('text', async (ctx, next) => {
   logger.info('–ü–æ–ª—É—á–µ–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', {
       step: ctx.wizard?.cursor,
       text: ctx.message.text
   });
   
   if (ctx.wizard?.cursor === 0 || ctx.wizard?.cursor === 1) {
       return next();
   }
   
   await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.');
});

export default createWarehouseNotificationScene;