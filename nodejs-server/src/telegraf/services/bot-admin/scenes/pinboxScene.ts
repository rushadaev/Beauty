import { Scenes, Markup } from 'telegraf';
import { MyContext } from '../../../types/MyContext';
import LaravelService from "../../../../services/laravelService";
import * as ExcelJS from 'exceljs';
import { Readable } from 'stream'; // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–æ—Ç –∏–º–ø–æ—Ä—Ç
import logger from '../../../../utils/logger/loggerTelegram';

interface PinboxService {
    '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞': string;
    '–¢–∏–ø —Ü–µ–Ω—ã': string;
    '–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞': number;
    '–í–∞–ª—é—Ç–∞': number;
    '–ö–∞—Ç–µ–≥–æ—Ä–∏—è': string;
    '–û–ø–∏—Å–∞–Ω–∏–µ': string;
    '–ù–æ–º–µ—Ä–∞ —Ñ–∏–ª–∏–∞–ª–æ–≤': string;
    'URL —Ñ–æ—Ç–æ': string;
}



export const pinboxScene = new Scenes.BaseScene<MyContext>('pinbox');

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
const CATEGORIES = {
    WOMAN: '–ñ–µ–Ω—Å–∫–∏–π —à—É–≥–∞—Ä–∏–Ω–≥',
    MAN: '–ú—É–∂—Å–∫–æ–π —à—É–≥–∞—Ä–∏–Ω–≥',
    ADDITIONAL: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏'
};

const BRANCH_IDS = {
    YCLIENTS: 490462, // ID –≤ Yclients (–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è)
    PINBOX: '63744,63745,63746' // ID –≤ Pinbox (–≤—Å–µ —Ñ–∏–ª–∏–∞–ª—ã)
};

const CATEGORY_MAPPING = {
    '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —à—É–≥–∞—Ä–∏–Ω–≥ Cherry Town  –∂–µ–Ω—Å–∫–∏–π': CATEGORIES.WOMAN,
    '–ß—ë—Ä–Ω—ã–π —à—É–Ω–≥–∏—Ç–æ–≤—ã–π —à—É–≥–∞—Ä–∏–Ω–≥ Monochrome –∂–µ–Ω—Å–∫–∏–π': CATEGORIES.WOMAN,
    '–õ–µ—á–µ–±–Ω—ã–π spa-—à—É–≥–∞—Ä–∏–Ω–≥ Botanix  –∂–µ–Ω—Å–∫–∏–π': CATEGORIES.WOMAN,
    '–ü–æ–ª–∏–º–µ—Ä–Ω—ã–π –≤–æ—Å–∫  italwax –∂–µ–Ω—Å–∫–∏–π': CATEGORIES.WOMAN,
    '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —à—É–≥–∞—Ä–∏–Ω–≥ Cherry Town –º—É–∂—Å–∫–æ–π': CATEGORIES.MAN,
    '–ß—ë—Ä–Ω—ã–π —à—É–Ω–≥–∏—Ç–æ–≤—ã–π —à—É–≥–∞—Ä–∏–Ω–≥ Monochrome –º—É–∂—Å–∫–æ–π': CATEGORIES.MAN,
    '–õ–µ—á–µ–±–Ω—ã–π spa-—à—É–≥–∞—Ä–∏–Ω–≥ Botanix  –º—É–∂—Å–∫–æ–π': CATEGORIES.MAN,
    '–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–µ–ø–∏–ª—è—Ü–∏—è  —Å–∞—Ö–∞—Ä +–≤–æ—Å–∫ –º—É–∂—Å–∫–æ–π': CATEGORIES.MAN,
    '–ü–æ–ª–∏–º–µ—Ä–Ω—ã–π –≤–æ—Å–∫  italwax –º—É–∂—Å–∫–æ–π': CATEGORIES.MAN,
    '–ö–∞—Ä–∞–º–µ–ª—å–Ω–∞—è –ª–∏–ø–æ—Å–∞–∫—Ü–∏—è Renie': CATEGORIES.ADDITIONAL
};

// –í—Ö–æ–¥–Ω–∞—è —Ç–æ—á–∫–∞ —Å—Ü–µ–Ω—ã
pinboxScene.enter(async (ctx: MyContext) => {
    const phone = ctx.session?.phone;
    const password = ctx.session?.password;

    if (!phone || !password) {
        await ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è.',
            Markup.inlineKeyboard([[
                Markup.button.callback('üëà –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'mainmenu')
            ]])
        );
        return;
    }

    const keyboard = Markup.inlineKeyboard([
        [Markup.button.callback('üì• –í—ã–≥—Ä—É–∑–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É Pinbox', 'export_pinbox')],
        [Markup.button.callback('üëà –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'mainmenu')]
    ]);

    await ctx.reply(
        'üì¶ –ú–æ–¥—É–ª—å Pinbox\n\n' +
        '‚Ä¢ –í—ã–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∏–∑ —ç—Ç–∞–ª–æ–Ω–Ω–æ–≥–æ —Ñ–∏–ª–∏–∞–ª–∞ "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è"\n' +
        '‚Ä¢ –£—Å–ª—É–≥–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º\n' +
        '‚Ä¢ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º Pinbox\n\n' +
        '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ —Ç–∞–±–ª–∏—Ü—ã.',
        keyboard
    );
});

// –≠–∫—Å–ø–æ—Ä—Ç —Ç–∞–±–ª–∏—Ü—ã
pinboxScene.action('export_pinbox', async (ctx) => {
    try {
        await ctx.answerCbQuery();
        const phone = ctx.session?.phone;
        const password = ctx.session?.password;

        // 1. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º ¬´–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ¬ª
        const waitingMessage = await ctx.reply('‚è≥ –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É Pinbox, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...');

        if (!phone || !password) {
            await ctx.deleteMessage(waitingMessage.message_id);
            await ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.');
            return;
        }

        // 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–∞–π–ª
        const template = await LaravelService.generatePinboxTemplate({ phone, password });

        // 3. –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ ¬´–∂–¥—ë–º...¬ª
        await ctx.deleteMessage(waitingMessage.message_id);

        // 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await ctx.replyWithDocument({
            source: template,
            filename: 'pinbox_services.xlsx'
        });

        await ctx.reply(
            '‚úÖ –¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞!\n' +
            '–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –µ—ë –≤ —Å–µ—Ä–≤–∏—Å Pinbox.',
            Markup.inlineKeyboard([[Markup.button.callback('üëà –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', 'back_to_menu')]])
        );

    } catch (error) {
        logger.error('Error in pinbox export:', error);

        try {
            await ctx.deleteMessage(); // –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ waitingMessage —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        } catch (e) {
            // –Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ
        }

        await ctx.reply(
            '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
            Markup.inlineKeyboard([[Markup.button.callback('üëà –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', 'back_to_menu')]])
        );
    }
});


function formatServiceTitle(serviceTitle: string, categoryTitle: string): string {
    // –û—á–∏—â–∞–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤
    serviceTitle = serviceTitle.trim();
    categoryTitle = categoryTitle.trim();

    // –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é title
    let title = serviceTitle;

    // –ë–∞–∑–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    let categoryInfo = categoryTitle
        .replace(/Cherry\s*Town/gi, '')
        .replace(/–∂–µ–Ω—Å–∫–∏–π$/, '—à—É–≥–∞—Ä–∏–Ω–≥ –∂–µ–Ω—Å–∫–∏–π')
        .replace(/–º—É–∂—Å–∫–æ–π$/, '—à—É–≥–∞—Ä–∏–Ω–≥ –º—É–∂—Å–∫–æ–π')
        .trim();

    // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    if (categoryTitle.toLowerCase().includes('italwax')) {
        const gender = categoryTitle.includes('–∂–µ–Ω—Å–∫–∏–π') ? '–∂–µ–Ω—Å–∫–∏–π' : '–º—É–∂—Å–∫–æ–π';
        if (!serviceTitle.toLowerCase().includes('italwax')) {
            title = `${serviceTitle} Italwax | –ü–æ–ª–∏–º–µ—Ä–Ω—ã–π –≤–æ—Å–∫ italwax —à—É–≥–∞—Ä–∏–Ω–≥ ${gender}`;
        } else {
            title = `${serviceTitle} | –ü–æ–ª–∏–º–µ—Ä–Ω—ã–π –≤–æ—Å–∫ italwax —à—É–≥–∞—Ä–∏–Ω–≥ ${gender}`;
        }
    } else if (serviceTitle.includes('Botanix-SPA') || categoryTitle.includes('Botanix')) {
        const gender = categoryTitle.includes('–∂–µ–Ω—Å–∫–∏–π') ? '–∂–µ–Ω—Å–∫–∏–π' : '–º—É–∂—Å–∫–æ–π';
        if (serviceTitle.includes('Botanix-SPA')) {
            title = `${serviceTitle} | –õ–µ—á–µ–±–Ω—ã–π spa-—à—É–≥–∞—Ä–∏–Ω–≥ ${gender}`;
        } else {
            title = `${serviceTitle} Botanix-SPA | –õ–µ—á–µ–±–Ω—ã–π spa-—à—É–≥–∞—Ä–∏–Ω–≥ ${gender}`;
        }
    } else if (categoryTitle.includes('Monochrome')) {
        const gender = categoryTitle.includes('–∂–µ–Ω—Å–∫–∏–π') ? '–∂–µ–Ω—Å–∫–∏–π' : '–º—É–∂—Å–∫–æ–π';
        if (!serviceTitle.toLowerCase().includes('monochrome')) {
            title = `${serviceTitle} Monochrome | –ß—ë—Ä–Ω—ã–π —à—É–Ω–≥–∏—Ç–æ–≤—ã–π —à—É–≥–∞—Ä–∏–Ω–≥ ${gender}`;
        } else {
            title = `${serviceTitle} | –ß—ë—Ä–Ω—ã–π —à—É–Ω–≥–∏—Ç–æ–≤—ã–π —à—É–≥–∞—Ä–∏–Ω–≥ ${gender}`;
        }
    } else if (categoryTitle.includes('–ö–∞—Ä–∞–º–µ–ª—å–Ω–∞—è –ª–∏–ø–æ—Å–∞–∫—Ü–∏—è')) {
        title = `${serviceTitle} | –ö–∞—Ä–∞–º–µ–ª—å–Ω–∞—è –ª–∏–ø–æ—Å–∞–∫—Ü–∏—è Renie`;
    } else {
        // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
        title = `${serviceTitle} | ${categoryInfo}`;
    }

    // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –¥—É–±–ª–∏–∫–∞—Ç—ã —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π
    title = title
        .replace(/\s+/g, ' ') // –£–±–∏—Ä–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã
        .replace(/\|\s+\|/g, '|') // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π
        .trim();

    return title;
}

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è Pinbox
function formatServicesForPinbox(services: any[]): PinboxService[] {
    const result: PinboxService[] = [];

    for (const service of services) {
        if (!CATEGORY_MAPPING[service.category_title]) continue;

        const pinboxCategory = CATEGORY_MAPPING[service.category_title];
        const formattedTitle = formatServiceTitle(service.title, service.category_title);

        result.push({
            '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞': formattedTitle,
            '–¢–∏–ø —Ü–µ–Ω—ã': service.price_min ? '—Ñ–∏–∫—Å' : '–æ—Ç',
            '–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞': service.price_min,
            '–í–∞–ª—é—Ç–∞': 0, // —Ä—É–±–ª–∏
            '–ö–∞—Ç–µ–≥–æ—Ä–∏—è': pinboxCategory,
            '–û–ø–∏—Å–∞–Ω–∏–µ': formattedTitle,
            '–ù–æ–º–µ—Ä–∞ —Ñ–∏–ª–∏–∞–ª–æ–≤': BRANCH_IDS.PINBOX,
            'URL —Ñ–æ—Ç–æ': 'https://pinbox.ru/assets/images/cabinet/dfprice.img.png'
        });
    }

    return result;
}

// –ù–∞–≤–∏–≥–∞—Ü–∏—è
pinboxScene.action('back_to_menu', async (ctx) => {
    await ctx.answerCbQuery();
    await ctx.scene.reenter();
});

pinboxScene.action('mainmenu', async (ctx) => {
    await ctx.answerCbQuery();
    await ctx.scene.enter('admin_main');
});

export default pinboxScene;